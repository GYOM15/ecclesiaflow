/*
 * Church Management Authentication API
 * API d'authentification et de gestion des utilisateurs pour un système de gestion d'églises en mode multi-tenant. Une église s'enregistre d'abord, puis peut créer et administrer ses propres utilisateurs avec des rôles spécifiques. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@churchmanagement.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChurchUserProfile;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserManagementApi
 */
@Disabled
public class UserManagementApiTest {

    private final UserManagementApi api = new UserManagementApi();

    /**
     * Lister les utilisateurs d&#39;une église
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void churchesChurchIdUsersGetTest() throws ApiException {
        String churchId = null;
        Integer page = null;
        Integer size = null;
        String role = null;
        List<ChurchUserProfile> response = api.churchesChurchIdUsersGet(churchId, page, size, role);
        // TODO: test validations
    }

    /**
     * Télécharger la photo de profil d&#39;un utilisateur d&#39;une église
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void churchesChurchIdUsersUserIdPhotoPostTest() throws ApiException {
        String churchId = null;
        String userId = null;
        File photo = null;
        api.churchesChurchIdUsersUserIdPhotoPost(churchId, userId, photo);
        // TODO: test validations
    }

    /**
     * Mettre à jour le profil d&#39;un utilisateur d&#39;une église
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void churchesChurchIdUsersUserIdPutTest() throws ApiException {
        String churchId = null;
        String userId = null;
        ChurchUserProfile churchUserProfile = null;
        api.churchesChurchIdUsersUserIdPut(churchId, userId, churchUserProfile);
        // TODO: test validations
    }

}
